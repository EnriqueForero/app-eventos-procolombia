import streamlit as st
import os
import pandas as pd
from menu import menu
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi
# Configuraci√≥n de la p√°gina

PATH_CWD = os.getcwd()
PATH_DATA = PATH_CWD + "/src/data/"
PATH_IMG  = PATH_DATA + 'img/'



st.set_page_config(page_title="Mi Aplicaci√≥n Streamlit", page_icon=":rocket:", layout="wide")
st.image(PATH_IMG + "header_ctg.jpg")
menu()

st.subheader("b√∫squeda de eventos de turismo - Procolombia")
st.divider()
st.markdown("En el aplicativo encontraras informaci√≥n relacionada con eventos asociativos de turismo en Colombia. Se incluyen m√©todos para extracci√≥n y b√∫squeda de eventos a trav√©s de internet, cumpliendo con criterios especificados por el usuario.")
st.markdown("""***¬øQue se incluye en el aplicativo?***""")
st.markdown("""***1. Tres metodolog√≠as de b√∫squeda de eventos de inter√©s en internet.***""")
st.markdown("""**- B√∫squeda autom√°tica:** Por medio de este m√©todo, el aplicativo realiza una b√∫squeda general en internet basado en los criterios especificados en la configuraci√≥n, posteriormente extrae la informaci√≥n relevante para los eventos encontrados.""")
st.page_link("pages/1-Busqueda_Automatica.py", label="üëâ :red[B√∫squeda Automatica]")
st.markdown("""**- B√∫squeda manual:** Por medio de este m√©todo, el usuario puede ingresar una URL y el aplicativo buscara los eventos disponibles en la misma, extrayendo la informaci√≥n relevante.""")
st.page_link("pages/2-Busqueda_Manual.py", label="üëâ :red[B√∫squeda Manual]")
st.markdown("""**- B√∫squeda recursiva:** Por medio de este m√©todo, el aplicativo recorrer√° diferentes sitios WEB de diferentes entidades en busqueda de eventos, y extrae los que sean encontrados.""")
st.page_link("pages/3-Busqueda Recursiva.py", label="üëâ :red[B√∫squeda Recursiva]")
st.markdown("""***2. Dashboard:*** El aplicativo cuenta con un panel para seguimiento y visualizacion de los eventos encontrados""")
st.page_link("pages/4-Dashboard.py", label="üëâ :red[Dashboard]")
st.markdown("""***3. configuraci√≥n:*** El aplicativo cuenta con un panel de configuraci√≥n, donde se incluyen todas las opciones de conexi√≥n, almacenamiento y criterios de b√∫squeda del aplicativo.""")
st.page_link("pages/5-Configuracion.py", label="üëâ :red[configuraci√≥n]")
st.divider()

# Pruebas


from pages.lib.funciones import filtrar_df, cargar_eventos_procesados_archivo, cargar_configuracion, cargar_contrase√±as, obtener_criterios_busqueda, actualizar_configuracion
from pages.lib.funciones import limpiar_df_event, web_scrapper, extraer_informacion_general_gemini
from pages.lib.funciones_db import cargar_eventos_procesados_db, check_event_db
from pages.lib.config import FN_KEYW_JSON, ACCESS_PATH 

config = cargar_configuracion( PATH_DATA + FN_KEYW_JSON)
contrase√±as = cargar_contrase√±as(ACCESS_PATH) 


df_eventos_sf = cargar_eventos_procesados_db(contrase√±as, 'Snowflake')
df_eventos_mdb = cargar_eventos_procesados_db(contrase√±as, 'MongoDB')

st.dataframe(df_eventos_sf)
st.dataframe(df_eventos_mdb)
